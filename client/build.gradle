plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'maven-publish'
    id 'signing'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

Properties localProperties = new Properties()
localProperties.load(rootProject.file('local.properties').newDataInputStream())

for(Map.Entry<String, ?> entry : localProperties.entrySet()){
    project.ext[entry.getKey()] = entry.getValue()
}


dependencies {
    implementation project(':core')
    implementation scalaDependency('org.rogach', 'scallop', '3.4.0')
}

def included = [':client', ':core']


shadowJar {
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    append('reference.conf')
    archiveClassifier = 'withDependencies-java'
}

task scalaJar(type: ShadowJar){
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    dependencies {exclude(dependency(scalaLib()))}
    append('reference.conf')
    archiveClassifier = 'withDependencies-scala'
}


jar {
    from zipTree(project(':core').file("build/libs/core-${rootProject.version}.jar"))
}

java {
    withSourcesJar()
    withJavadocJar()
}

sourcesJar {
    from included.collect { project(it).sourceSets.main.allScala }
}

task scaladocJar(type: Jar){
    archiveClassifier = 'scaladoc'
    from new File(buildDir, 'docs/scaladoc')
    group 'build'
    dependsOn scaladoc
}

scaladoc {
    source included.collect { project(it).sourceSets.main.allScala }
    project.configurations.implementation.canBeResolved = true
    scalaClasspath+=project.configurations.implementation
}

task clearBuild {
    buildDir.deleteDir()
}

afterEvaluate {
    generateMetadataFileForMavenScalaPublication.dependsOn(clean)
}

javadocJar.dependsOn(scaladocJar)

def scaladocFile = file("$buildDir/libs/client-$version-scaladoc.jar")
def scaladocArtifact = artifacts.add('archives', scaladocFile)

publishing {
    publications {
        mavenScala(MavenPublication) {
            artifactId = 'ec-client_' + getMajorScalaVersion()

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('implementation')
                }
            }

            repositories {
                maven {
                    url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    credentials {
                        username = "Il_totore"
                        password = System.getenv("SONATYPE_PASSWORD")
                    }
                }
            }

            pom {
                name = 'EnderChest Client'
                description = 'The EnderChest\'s client library'
                url = 'https://github.com/Iltotore/EnderChest'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'iltotore'
                        name = 'Il_totore'
                        email = 'rafbodaha@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Iltotore/EnderChest.git'
                    developerConnection = 'scm:git:ssh://github.com/Iltotore/EnderChest.git'
                    url = 'https://github.com/Iltotore/EnderChest.git'
                }

                withXml {
                    asNode().dependencies.dependency.each { dep ->
                        if(dep.artifactId.last().value().last() in ['core']) {
                            assert dep.parent().remove(dep)
                        }
                    }
                }
            }

            from components.java
            artifact scaladocArtifact
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenScala
}

def scalaLib() {
    return 'org.scala-lang:scala-library:' + scalaVersion
}